#
# Set up environment variables for general build tool to operate
#
export ZOPEN_TYPE="TARBALL"
MAKE_VERSION="4.4.1"

export ZOPEN_TARBALL_URL="https://ftp.gnu.org/gnu/make/make-$MAKE_VERSION.tar.gz"
export ZOPEN_TARBALL_DEPS="curl gzip tar m4 perl make zoslib" 

export ZOPEN_GIT_URL="https://git.savannah.gnu.org/git/make.git"
export ZOPEN_GIT_DEPS="git make m4 perl autoconf automake help2man texinfo xz"
export ZOPEN_CHECK="check_make"
export ZOPEN_INSTALL="install_make"
export ZOPEN_COMP=CLANG

# Use a function as ./make doesn't exist at buildenv processing
install_make()
{
  ./make install "$@"
}

check_make()
{
(cd "${ZOPEN_ROOT}/make-$MAKE_VERSION/tests" && perl ./run_make_tests.pl -srcdir ../ -make ../make 2>&1)
}

zopen_check_results()
{
chk="$1/$2_check.log"

if grep ".* Tests.*No Failures :-)" ${chk} >/dev/null; then
  totalTests=$(grep ".* Tests.*No Failures :-)" ${chk} | cut -f1 -d' ')
  cat <<ZZ
actualFailures:0
totalTests:$totalTests
expectedFailures:0
ZZ
  return
fi

failures=$(grep ".* Test.*in .* Categor.*Failed" ${chk} | cut -f1 -d' ')
success=$(egrep "[0-9]+ passed" $chk | sed -e 's#.*[(/]\([0-9]\+\) passed)#\1#g' | awk '{s+=$1} END {print s}')
totalTests=$((failures+success))

cat <<ZZ
actualFailures:$failures
totalTests:$totalTests
expectedFailures:0
ZZ
}

